// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieRatingAPI.Data.Context;

#nullable disable

namespace MovieRatingAPI.Migrations
{
    [DbContext(typeof(MovieRatingDbContext))]
    [Migration("20240128232029_InitialCreateSeedData")]
    partial class InitialCreateSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieRatingAPI.Data.Entities.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RealeaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Starring")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Image = "https://images.app.goo.gl/qA7EYMCG7sG7XYiw8",
                            Name = "Killers of the flower moon",
                            RealeaseDate = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "Resume of Killers of the flower moon",
                            Starring = "Leonardo DiCaprio, Robert De Niro, Lily Gladstone",
                            Tags = "Crime, History, Drama"
                        },
                        new
                        {
                            MovieId = 2,
                            Image = "https://images.app.goo.gl/wxTabBJgNDvT4UtB9",
                            Name = "Se7en",
                            RealeaseDate = new DateTime(1995, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "Resume of Se7en",
                            Starring = "Morgan Freeman, Brad Pitt, Kevin Spacey",
                            Tags = "Crime, Mystery, Drama"
                        },
                        new
                        {
                            MovieId = 3,
                            Image = "https://images.app.goo.gl/xUf4tSp5Em7deLr79",
                            Name = "The hateful eight",
                            RealeaseDate = new DateTime(2016, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "Resume of The hateful eight",
                            Starring = "Samuel L. Jackson, Kurt Russell, Jennifer Jason Leigh",
                            Tags = "Crime, Mystery, Drama"
                        },
                        new
                        {
                            MovieId = 4,
                            Image = "https://images.app.goo.gl/fgNqN3kejWiYWY916",
                            Name = "Kiss kiss bang bang",
                            RealeaseDate = new DateTime(2005, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "Resume for Kiss kiss bang bang",
                            Starring = "Robert Downey Jr., Val Kilmer, Michelle Monaghan",
                            Tags = "Crime, Comedy, Mystery"
                        },
                        new
                        {
                            MovieId = 5,
                            Image = "",
                            Name = "The killer",
                            RealeaseDate = new DateTime(2023, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "After a fateful near-miss, an assassin battles his employers and himself, on an international manhunt he insists isn't personal.",
                            Starring = "Michael Fassbender, Tilda Swinton, Charles Parnell",
                            Tags = "Crime, Action, Adventure"
                        },
                        new
                        {
                            MovieId = 6,
                            Image = "https://images.app.goo.gl/MB7Ljzz1nDQJjN6X9",
                            Name = "Revolver",
                            RealeaseDate = new DateTime(2005, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "Resume of Revolver",
                            Starring = "Jason Statham, Ray Liotta, André 3000",
                            Tags = "Crime, Action, Drama"
                        },
                        new
                        {
                            MovieId = 7,
                            Image = "https://images.app.goo.gl/jAPdTufZj7YzvDqt5",
                            Name = "Dune",
                            RealeaseDate = new DateTime(2021, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "Resume of Dune",
                            Starring = "Timothée Chalamet, Rebecca Ferguson, Zendaya",
                            Tags = "Adventure, Action, Drama"
                        },
                        new
                        {
                            MovieId = 8,
                            Image = "https://images.app.goo.gl/c1RsoGhhoPyuCaVt7",
                            Name = "The whale",
                            RealeaseDate = new DateTime(2023, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "A reclusive, morbidly obese English teacher attempts to reconnect with his estranged teenage daughter.",
                            Starring = "Brendan Fraser, Sadie Sink, Ty Simpkins",
                            Tags = "Drama"
                        },
                        new
                        {
                            MovieId = 9,
                            Image = "https://images.app.goo.gl/V4K6yzASis1kT83d6",
                            Name = "American psycho",
                            RealeaseDate = new DateTime(2000, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "A reclusive, morbidly obese English teacher attempts to reconnect with his estranged teenage daughter.",
                            Starring = "Christian Bale, Justin Theroux, Josh Lucas",
                            Tags = "Drama, Crime, Horror"
                        },
                        new
                        {
                            MovieId = 10,
                            Image = "https://images.app.goo.gl/1gt4GrDhj8WjdgWE7",
                            Name = "The Lincoln lawyer",
                            RealeaseDate = new DateTime(2011, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "A reclusive, morbidly obese English teacher attempts to reconnect with his estranged teenage daughter.",
                            Starring = "Ryan Phillippe, Marisa Tomei, Matthew McConaughey",
                            Tags = "Drama, Crime, Mystery"
                        },
                        new
                        {
                            MovieId = 11,
                            Image = "https://images.app.goo.gl/KdKdJzE6Zu8yuTDbA",
                            Name = "Public enemies",
                            RealeaseDate = new DateTime(2011, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Resume = "The Feds try to take down notorious American gangsters John Dillinger, Baby Face Nelson, and Pretty Boy Floyd during a booming crime wave in the 1930s.",
                            Starring = "Christian Stolte, Johnny Depp, Christian Bale",
                            Tags = "Action, Crime, Biography"
                        });
                });

            modelBuilder.Entity("MovieRatingAPI.Data.Entities.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("MovieId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            MovieId = 1,
                            Value = 1
                        },
                        new
                        {
                            RatingId = 2,
                            MovieId = 1,
                            Value = 2
                        },
                        new
                        {
                            RatingId = 3,
                            MovieId = 1,
                            Value = 2
                        },
                        new
                        {
                            RatingId = 4,
                            MovieId = 1,
                            Value = 5
                        },
                        new
                        {
                            RatingId = 5,
                            MovieId = 2,
                            Value = 1
                        },
                        new
                        {
                            RatingId = 6,
                            MovieId = 2,
                            Value = 4
                        },
                        new
                        {
                            RatingId = 7,
                            MovieId = 2,
                            Value = 4
                        },
                        new
                        {
                            RatingId = 8,
                            MovieId = 2,
                            Value = 4
                        },
                        new
                        {
                            RatingId = 9,
                            MovieId = 3,
                            Value = 1
                        },
                        new
                        {
                            RatingId = 10,
                            MovieId = 4,
                            Value = 2
                        },
                        new
                        {
                            RatingId = 11,
                            MovieId = 5,
                            Value = 3
                        },
                        new
                        {
                            RatingId = 12,
                            MovieId = 6,
                            Value = 4
                        },
                        new
                        {
                            RatingId = 13,
                            MovieId = 7,
                            Value = 5
                        },
                        new
                        {
                            RatingId = 14,
                            MovieId = 8,
                            Value = 1
                        },
                        new
                        {
                            RatingId = 15,
                            MovieId = 9,
                            Value = 2
                        },
                        new
                        {
                            RatingId = 16,
                            MovieId = 10,
                            Value = 2
                        },
                        new
                        {
                            RatingId = 17,
                            MovieId = 11,
                            Value = 2
                        });
                });

            modelBuilder.Entity("MovieRatingAPI.Data.Entities.Rating", b =>
                {
                    b.HasOne("MovieRatingAPI.Data.Entities.Movie", "Movie")
                        .WithMany("Ratings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieRatingAPI.Data.Entities.Movie", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
